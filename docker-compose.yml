services:

  postgres:
    image: postgres
    container_name: postgres
    ports:
      - "5432:5432"
    volumes:
      - ./db_data:/var/lib/postgresql/data
    env_file:
      - .env
    networks:
      - internal
    restart: unless-stopped

  backend:
    image: backend
    container_name: backend
    ports:
      - "3000:3000"
    build: 
      context: ./backend # директория сборки (контекст)
      dockerfile: Dockerfile # Имя файла описания контейнера (Dockerfile)
    env_file:
      .env
    networks:
      - internal
    depends_on:
      - postgres
    restart: unless-stopped

# раскомментарить блок для первичного заполнения базы данных
#  dbfill:
#    image: dbfill
#    container_name: dbfill
#    build: 
#      context: ./dump # директория сборки (контекст)
#      dockerfile: Dockerfile # Имя файла описания контейнера (Dockerfile)
#    env_file:
#      .env
#    networks:
#      - internal
#    depends_on:
#      - postgres
#      - backend

  frontend:
    image: frontend
    container_name: frontend
    build: 
      context: ./frontend # директория сборки (контекст)
      dockerfile: Dockerfile # Имя файла описания контейнера (Dockerfile)
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./certbot/www/:/var/www/certbot/:ro
      - ./certbot/conf/:/etc/letsencrypt/:ro
    networks:
      - internal
      - internet
    depends_on:
      - backend
      - postgres
    restart: unless-stopped

  certbot:
    image: certbot/certbot:latest
    container_name: certbot
    networks:
      - internet
    volumes:
      - ./certbot/www/:/var/www/certbot/:rw
      - ./certbot/conf/:/etc/letsencrypt/:rw

networks:
  internal:
    name: internal
    driver: bridge
    internal: true
  internet:
    name: internet
    driver: bridge
