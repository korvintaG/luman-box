import { SceneContext } from 'telegraf/typings/scenes';
import { MyContext } from '../telegram-sessions.types';
import {
  Patterns,
  CallbackData,
  ScenesNames,
} from '../telegram-sessons.patterns';
import { Message } from '@telegraf/types';
import { deleteMessages } from '../utils';

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ç–µ–∫—Å—Ç –∫–Ω–æ–ø–∫–∏ —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è (–∑–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω? –∏–∑–º–µ–Ω–∏—Ç—å –ø–∞—Ä–æ–ª—å : –∑–∞–¥–∞—Ç—å/–∏–∑–º–µ–Ω–∏—Ç—å –ª–æ–≥–∏–Ω –∏ –ø–∞—Ä–æ–ª—å )
 */
const regButtonText = (ctx: MyContext & SceneContext) =>
  ctx.session.name === 'null'
    ? Patterns.BUTTON_REGISTER
    : ctx.session.user_id === 0
      ? Patterns.BUTTON_REGISTER_FINILIZE
      : Patterns.BUTTON_MANAGE_ACCOUNT;

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∏–Ω–ª–∞–π–Ω–æ–≤—ã–π –Ω–∞–±–æ—Ä –∫–Ω–æ–ø–æ–∫ –æ—Å–Ω–æ–≤–Ω–æ–≥–æ –º–µ–Ω—é
 */
const mainKeyboard = (ctx: MyContext & SceneContext) => {
  return {
    inline_keyboard: [
      [
        {
          text: regButtonText(ctx),
          callback_data: CallbackData.REGISTER,
        },
      ],
      [
        {
          text: Patterns.BUTTON_AUTHORS,
          callback_data: CallbackData.AUTHORS,
        },
        {
          text: Patterns.BUTTON_SOURCES,
          callback_data: CallbackData.SOURCES,
        },
      ],
      [
        {
          text: Patterns.BUTTON_IDEAS,
          callback_data: CallbackData.IDEAS,
        },
        {
          text: Patterns.BUTTON_KEYWORDS,
          callback_data: CallbackData.KEYWORDS,
        },
      ],
      [
        {
          text: Patterns.BUTTON_CONTACTS,
          callback_data: CallbackData.CONTACTS,
        },
      ],
    ],
  };
};

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –µ–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω–æ–π –∫–Ω–æ–ø–∫–æ–π "–ù–∞–∑–∞–¥ –≤ —Å–Ω–æ–≤–Ω–æ–µ –º–µ–Ω—é"
 */
const onlyBackButtonKeyboard = () => {
  return {
    inline_keyboard: [
      [
        {
          text: Patterns.BUTTON_BACK,
          callback_data: CallbackData.BACK_TO_MENU,
        },
      ],
    ],
  };
};

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É —Å –∫–Ω–æ–ø–∫–∞–º–∏ –¥–ª—è —Å—Ü–µ–Ω—ã —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏
 */
const registrationKeyboard = (ctx: MyContext & SceneContext) => {
  if (ctx.session.user_id !== 0) {
    return {
      inline_keyboard: [
        [
          {
            text: Patterns.BUTTON_CHANGE_PASSWORD,
            callback_data: CallbackData.CHANGE_PASSWORD,
          },
        ],
        [
          {
            text: Patterns.BUTTON_BACK,
            callback_data: CallbackData.BACK_TO_MENU,
          },
        ],
      ],
    };
  } else if (ctx.session.password === '') {
    return {
      inline_keyboard: [
        [
          {
            text: Patterns.BUTTON_UPDATE_NAME,
            callback_data: CallbackData.UPDATE_NAME,
          },
          {
            text: Patterns.BUTTON_CREATE_PASSWORD,
            callback_data: CallbackData.CREATE_PASSWORD,
          },
        ],
        [
          {
            text: Patterns.BUTTON_BACK,
            callback_data: CallbackData.BACK_TO_MENU,
          },
        ],
      ],
    };
  } else {
    return {
      inline_keyboard: [
        [
          {
            text: Patterns.BUTTON_UPDATE_NAME,
            callback_data: CallbackData.UPDATE_NAME,
          },
          {
            text: Patterns.BUTTON_CHANGE_PASSWORD,
            callback_data: CallbackData.CHANGE_PASSWORD,
          },
        ],
        [
          {
            text: Patterns.BUTTON_REGISTER_FINILIZE,
            callback_data: CallbackData.FINILIZE_REGISTRATION,
          },
        ],
        [
          {
            text: Patterns.BUTTON_BACK,
            callback_data: CallbackData.BACK_TO_MENU,
          },
        ],
      ],
    };
  }
};

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∏–Ω–ª–∞–π–Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è mainScene
 *
 * –ö–æ–Ω—Ç—Ä—É–∫—Ü–∏—è try catch –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–µ—Å–ª–∏ –≤ —á–∞—Ç–µ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ —ç—Ç–æ–≥–æ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã) –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –µ–¥–∏–Ω—Å–≤—Ç–µ–Ω–Ω–æ–µ —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –±–æ—Ç–∞ —Å –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
 *
 * –í catch —Ç–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –æ—à–∏–±–∫–∏, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ–ª–µ–µ 2 —Ä–∞–∑ —Å–æ–≤–µ—Ä—à–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–≤–∞–∂–¥—ã –≤–≤–æ–¥–∏—Ç –∫–æ—Ä–æ—Ç–∫–∏–π username –∏–ª–∏ –Ω–µ–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ –≤–≤–æ–¥–∏—Ç –Ω–µ—É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) –∏ –º–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫—É, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–µ–ª—å–∑—è, —Ç.–∫. –æ–Ω–æ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å
 */
export async function replyMain(
  ctx: MyContext & SceneContext,
): Promise<Message.TextMessage> {
  const messageText =
    ctx.session.name !== 'null'
      ? `${Patterns.HELLO}, ${ctx.session.name}! üëã `
      : `${Patterns.HELLO}, ${ctx.from.username}! üëã `;

  try {
    const reply = await ctx.telegram.editMessageText(
      ctx.session.chat_id,
      ctx.session.msg_to_upd.message_id,
      undefined,
      messageText,
      {
        reply_markup: mainKeyboard(ctx),
        parse_mode: 'HTML',
      },
    );
    return reply as Message.TextMessage;
  } catch (e) {
    const reply = await ctx.reply(messageText, {
      reply_markup: mainKeyboard(ctx),
      parse_mode: 'HTML',
    });
    if (
      e.message.includes(
        'new message content and reply markup are exactly the same',
      )
    ) {
      if ((ctx.session.prev_scene = ScenesNames.START)) {
        //–µ—Å–ª–∏ –ø—Ä–µ–¥—ã–¥—É—â–∞—è —Å—Ü–µ–Ω–∞ –±—ã–ª–∞ Start, —Ç–æ –≤–æ–∑–º–æ–∂–Ω–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞—à–µ–ª –ø–æ—Å–ª–µ —Ç–æ–≥–æ, –∫–∞–∫ –¥–æ —ç—Ç–æ–≥–æ —É–¥–∞–ª–∏–ª –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–∞—Ç–∞, –ø—Ä–∏ —ç—Ç–æ–º –ø–æ—Å–ª–µ–¥–Ω–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∫–æ—Ç–æ—Ä–æ–µ –±—ã–ª–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –±–æ—Ç–æ–º, —Ö—Ä–∞–Ω–∏—Ç—Å—è –≤ —Å—Ç–µ–π—Ç–µ –∏ –±—É–¥–µ—Ç –≤–æ–∑–≤—Ä–∞—â–∞—Ç—å –æ—à–∏–±–∫—É, —á—Ç–æ –Ω–µ—á–µ–≥–æ –ø—Ä–∞–≤–∏—Ç—å
        //—É–¥–∞–ª—è–µ–º –≤—Å–µ —Å—Ç–∞—Ä—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–µ —Ç–µ–æ—Ä–µ—Ç–∏—á–µ—Å–∫–∏ –º–æ–≥–ª–∏ –±—ã –±—ã—Ç—å, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –º–Ω–æ–≥–æ–∫—Ä–∞—Ç–Ω–æ –∂–∞–ª –Ω–∞ —Å—Ç–∞—Ä—Ç, –Ω–æ –¥–æ —ç—Ç–æ–≥–æ –Ω–µ —É–¥–∞–ª—è–ª —á–∞—Ç
        deleteMessages(ctx);
        return reply;
      } else return ctx.session.msg_to_upd;
    }
    return reply;
  }
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∏–Ω–ª–∞–π–Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è submitUsername.
 *
 * –°—Ç–∞—Ç—É—Å—ã —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ ctx.session.msg_status:
 * * 1 - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π, –µ—â–µ –Ω–µ –≤–≤–µ–ª –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * * 2 - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è, –Ω–æ –æ–Ω–æ —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–æ–µ
 * * 3 - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ—Ç–≤–µ—Ç–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –Ω–æ –æ–Ω–æ –Ω–µ –ø—Ä–æ—à–ª–æ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å
 * 
  * –ö–æ–Ω—Ç—Ä—É–∫—Ü–∏—è try catch –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–µ—Å–ª–∏ –≤ —á–∞—Ç–µ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ —ç—Ç–æ–≥–æ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã) –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –µ–¥–∏–Ω—Å–≤—Ç–µ–Ω–Ω–æ–µ —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –±–æ—Ç–∞ —Å –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
 *
 * –í catch —Ç–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –æ—à–∏–±–∫–∏, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ–ª–µ–µ 2 —Ä–∞–∑ —Å–æ–≤–µ—Ä—à–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–≤–∞–∂–¥—ã –≤–≤–æ–¥–∏—Ç –∫–æ—Ä–æ—Ç–∫–∏–π username –∏–ª–∏ –Ω–µ–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ –≤–≤–æ–¥–∏—Ç –Ω–µ—É–Ω–∏–∫–∞–ª—å–Ω–æ–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è) –∏ –º–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫—É, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–µ–ª—å–∑—è, —Ç.–∫. –æ–Ω–æ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å

 */
export async function replySubmitUsername(
  ctx: MyContext & SceneContext,
): Promise<Message.TextMessage> {
  const messageText =
    ctx.session.msg_status === 1
      ? Patterns.USERNAME_SHORT
      : ctx.session.msg_status === 2
        ? Patterns.USERNAME_INVALID
        : ctx.session.msg_status === 3
          ? Patterns.USERNAME_BUSY
          : ctx.session.name !== 'null'
            ? Patterns.USERNAME_UPDATE
            : Patterns.USERNAME_CREATE;

  try {
    const reply = await ctx.telegram.editMessageText(
      ctx.session.chat_id,
      ctx.session.msg_to_upd.message_id,
      undefined,
      messageText,
      {
        reply_markup: onlyBackButtonKeyboard(),
        parse_mode: 'HTML',
      },
    );
    return reply as Message.TextMessage;
  } catch (e) {
    if (
      e.message.includes(
        'new message content and reply markup are exactly the same',
      )
    ) {
      return ctx.session.msg_to_upd;
    }
    const reply = await ctx.reply(messageText, {
      reply_markup: onlyBackButtonKeyboard(),
      parse_mode: 'HTML',
    });
    return reply;
  }
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∏–Ω–ª–∞–π–Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è submitPassword.
 *
 * –°—Ç–∞—Ç—É—Å—ã —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ ctx.session.msg_status:
 * * 0 - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–æ–≤—ã–π, –µ—â–µ –Ω–µ –≤–≤–µ–ª –ø–∞—Ä–æ–ª—å
 * * 1 - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –ø–∞—Ä–æ–ª—å, –Ω–æ –æ–Ω —Å–ª–∏—à–∫–æ–º –∫–æ—Ä–æ—Ç–∫–∏–π
 * * 2 - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–µ–ª –ø–∞—Ä–æ–ª—å –æ—Ç–≤–µ—Ç–Ω—ã–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º, –Ω–æ –æ–Ω –Ω–µ –ø—Ä–æ—à–ª–æ –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ —É–Ω–∏–∫–∞–ª—å–Ω–æ—Å—Ç—å 
 * * 3 - –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ –µ—Å—Ç—å –≤ –±–∞–∑–µ –∏ –æ–Ω —É—Å–ø–µ—à–Ω–æ –ø–æ–º–µ–Ω—è–ª –ø–∞—Ä–æ–ª—å
 * 
  * –ö–æ–Ω—Ç—Ä—É–∫—Ü–∏—è try catch –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–µ—Å–ª–∏ –≤ —á–∞—Ç–µ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ —ç—Ç–æ–≥–æ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã) –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –µ–¥–∏–Ω—Å–≤—Ç–µ–Ω–Ω–æ–µ —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –±–æ—Ç–∞ —Å –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
 *
 * –í catch —Ç–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –æ—à–∏–±–∫–∏, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ–ª–µ–µ 2 —Ä–∞–∑ —Å–æ–≤–µ—Ä—à–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–≤–∞–∂–¥—ã –≤–≤–æ–¥–∏—Ç –∫–æ—Ä–æ—Ç–∫–∏–π –ø–∞—Ä–æ–ª—å –∏–ª–∏ –Ω–µ–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ –≤–≤–æ–¥–∏—Ç –ø–∞—Ä–æ–ª—å —Å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏) –∏ –º–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫—É, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–µ–ª—å–∑—è, —Ç.–∫. –æ–Ω–æ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å

 */
export async function replySubmitPassword(
  ctx: MyContext & SceneContext,
): Promise<Message.TextMessage> {
  const messageText =
    ctx.session.msg_status === 1
      ? Patterns.PASSWORD_SHORT
      : ctx.session.msg_status === 2
        ? Patterns.PASSWORD_INVALID
        : ctx.session.msg_status === 3
          ? Patterns.PASSWORD_UPDATED
          : Patterns.PASSWORD_CREATE;

  try {
    const reply = await ctx.telegram.editMessageText(
      ctx.session.chat_id,
      ctx.session.msg_to_upd.message_id,
      undefined,
      messageText,
      {
        reply_markup: onlyBackButtonKeyboard(),
        parse_mode: 'HTML',
      },
    );
    return reply as Message.TextMessage;
  } catch (e) {
    if (
      e.message.includes(
        'new message content and reply markup are exactly the same',
      )
    ) {
      return ctx.session.msg_to_upd;
    }
    const reply = await ctx.reply(messageText, {
      reply_markup: onlyBackButtonKeyboard(),
      parse_mode: 'HTML',
    });
    return reply;
  }
}
/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –∏–Ω–ª–∞–π–Ω–æ–≤—ã–µ –∫–Ω–æ–ø–∫–∏ –¥–ª—è —Å—Ü–µ–Ω—ã –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏–∏.
 *
 * –ö–æ–Ω—Ç—Ä—É–∫—Ü–∏—è try catch –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–µ—Å–ª–∏ –≤ —á–∞—Ç–µ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ —ç—Ç–æ–≥–æ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã) –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –µ–¥–∏–Ω—Å–≤—Ç–µ–Ω–Ω–æ–µ —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –±–æ—Ç–∞ —Å –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
 *
 * –í catch —Ç–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –æ—à–∏–±–∫–∏, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ–ª–µ–µ 2 —Ä–∞–∑ —Å–æ–≤–µ—Ä—à–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–≤–∞–∂–¥—ã –≤–≤–æ–¥–∏—Ç –∫–æ—Ä–æ—Ç–∫–∏–π –ø–∞—Ä–æ–ª—å –∏–ª–∏ –Ω–µ–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ –≤–≤–æ–¥–∏—Ç –ø–∞—Ä–æ–ª—å —Å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏) –∏ –º–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫—É, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–µ–ª—å–∑—è, —Ç.–∫. –æ–Ω–æ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å

 */
export async function replyRegistration(
  ctx: MyContext & SceneContext,
): Promise<Message.TextMessage> {
  const messageText =
    ctx.session.user_id !== 0
      ? `${Patterns.REGISTER_STATUS_FINILIZED}${Patterns.USERNAME_CURRENT} ${ctx.session.name}\n${Patterns.PASSWORD_IS_SECRET}`
      : ctx.session.password === '' && ctx.session.name !== 'null'
        ? `${Patterns.REGISTER_STATUS_PROCESSED}${Patterns.USERNAME_TEMP_CURRENT} ${ctx.session.name} \n\n${Patterns.REGISTER_NEED_ACTION}`
        : `${Patterns.REGISTER_STATUS_PROCESSED}${Patterns.USERNAME_TEMP_CURRENT} ${ctx.session.name} \n\n${Patterns.PASSWORD_TEMP_CURRENT} <tg-spoiler>${ctx.session.password}</tg-spoiler>\n\n${Patterns.REGISTER_NEED_TO_BE_FINISHED}`;

  try {
    const reply = await ctx.telegram.editMessageText(
      ctx.session.chat_id,
      ctx.session.msg_to_upd.message_id,
      undefined,
      messageText,
      {
        reply_markup: registrationKeyboard(ctx),
        parse_mode: 'HTML',
      },
    );
    return reply as Message.TextMessage;
  } catch (e) {
    if (
      e.message.includes(
        'new message content and reply markup are exactly the same',
      )
    ) {
      return ctx.session.msg_to_upd;
    }
    const reply = await ctx.reply(messageText, {
      reply_markup: registrationKeyboard(ctx),
      parse_mode: 'HTML',
    });
    return reply;
  }
}

/**
 * –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—Ç–≤–µ—Ç–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ-–∑–∞–≥–ª—É—à–∫—É —Å –∫–Ω–æ–ø–∫–æ–π "–Ω–∞–∑–∞–¥"  –¥–ª—è –Ω–µ–∑–∞–ø–æ–ª–Ω–µ–Ω–Ω—ã—Ö —Å—Ü–µ–Ω.
 *
 * –ö–æ–Ω—Ç—Ä—É–∫—Ü–∏—è try catch –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –¥–ª—è —Ç–æ–≥–æ, —á—Ç–æ–±—ã –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –Ω–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ (–µ—Å–ª–∏ –≤ —á–∞—Ç–µ –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–æ —ç—Ç–æ–≥–æ –±—ã–ª–∏ —É–¥–∞–ª–µ–Ω—ã) –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç—å –µ–¥–∏–Ω—Å–≤—Ç–µ–Ω–Ω–æ–µ —Ç–µ–∫—É—â–µ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∞ –±–æ—Ç–∞ —Å –æ–¥–Ω–∏–º —Å–æ–æ–±—â–µ–Ω–∏–µ–º
 *
 * –í catch —Ç–∞–∫–∂–µ –ø—Ä–æ–≤–µ—Ä—è–µ—Ç—Å—è –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –≤–æ–∑–Ω–∏–∫–Ω–æ–≤–µ–Ω–∏—è –æ—à–∏–±–∫–∏, –∫–æ–≥–¥–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –±–æ–ª–µ–µ 2 —Ä–∞–∑ —Å–æ–≤–µ—Ä—à–∞–µ—Ç –Ω–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –¥–µ–π—Å—Ç–≤–∏–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–≤–∞–∂–¥—ã –≤–≤–æ–¥–∏—Ç –∫–æ—Ä–æ—Ç–∫–∏–π –ø–∞—Ä–æ–ª—å –∏–ª–∏ –Ω–µ–æ–¥–Ω–æ–∫—Ä–∞—Ç–Ω–æ –≤–≤–æ–¥–∏—Ç –ø–∞—Ä–æ–ª—å —Å –∑–∞–ø—Ä–µ—â–µ–Ω–Ω—ã–º–∏ —Å–∏–º–≤–æ–ª–∞–º–∏) –∏ –º–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –æ—à–∏–±–∫—É, —á—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–µ–ª—å–∑—è, —Ç.–∫. –æ–Ω–æ –Ω–µ –∏–∑–º–µ–Ω–∏–ª–æ—Å—å

 */
export async function replyWithBackButton(
  ctx: MyContext & SceneContext,
): Promise<Message.TextMessage> {
  const messageText = Patterns.NOT_READY_PAGE;
  try {
    const reply = await ctx.telegram.editMessageText(
      ctx.session.chat_id,
      ctx.session.msg_to_upd.message_id,
      undefined,
      messageText,
      {
        reply_markup: onlyBackButtonKeyboard(),
        parse_mode: 'HTML',
      },
    );
    return reply as Message.TextMessage;
  } catch (e) {
    if (
      e.message.includes(
        'new message content and reply markup are exactly the same',
      )
    ) {
      return ctx.session.msg_to_upd;
    }
    const reply = await ctx.reply(messageText, {
      reply_markup: onlyBackButtonKeyboard(),
      parse_mode: 'HTML',
    });
    return reply;
  }
}
